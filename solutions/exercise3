=================================
/actions/actionsTypes.js
=================================
import keyMirror from 'keymirror';

export default keyMirror({
    CHANGE_VALUE: null,
    BOX_TICKED: null,
    VALUE_SELECTED: null,
});

=================================
/actions/index.js
=================================
[...]

// exercise3
export const valueSelected = (event) => {
    return {
        type: actionTypes.VALUE_SELECTED,
        payload: {
            newValue: event.target.value,
        },
    };
};

=================================
/components/App.js
=================================
import React from 'react';

import IntelligentExerciseZero from '../containers/IntelligentExerciseZero';
import IntelligentExerciseOne from '../containers/IntelligentExerciseOne';
import IntelligentExerciseTwo from '../containers/IntelligentExerciseTwo';
import IntelligentExerciseThree from '../containers/IntelligentExerciseThree';

// This is where you build the skeleton of your App
// by displaying the right intelligent components
// Meet me in ../components/ExerciseZero after you've understood this file
const App = () => (
    <div>
        <IntelligentExerciseZero />
        <IntelligentExerciseOne />
        <IntelligentExerciseTwo />
        <IntelligentExerciseThree />
    </div>
);

export default App;

=================================
/components/ExerciseThree.js
=================================
import React from 'react';

const propTypes = {
    newValue: React.PropTypes.string.isRequired,
    oldValue: React.PropTypes.string.isRequired,
    valueSelected: React.PropTypes.func.isRequired,
};

// This component should stay "dumb" (i.e. stateless)
// It should not have it's own state and should only use props
const ExerciseThree = ({ newValue, oldValue, valueSelected }) => (
    <div>
        <h1>Exercise 3</h1>
        <div style={{ marginBottom: '5px' }}>Old value: {oldValue}</div>
        <div style={{ marginBottom: '5px' }}>New value: {newValue}</div>
        <div>
            <label htmlFor="selectField">
                <select id="selectField" name="select" value={newValue} onChange={valueSelected}>
                    <option value="">Select me</option>
                    <option value="blue">Blue</option>
                    <option value="white">White</option>
                    <option value="red">Red</option>
                </select>
            </label>
        </div>
    </div>
);

ExerciseThree.propTypes = propTypes;

export default ExerciseThree;

=================================
/components/IntelligentExerciseThree.js
=================================
import { connect } from 'react-redux';
import ExerciseThree from '../components/ExerciseThree';
import * as actions from '../actions';

const mapStateToProps = (state) => {
    return {
        oldValue: state.exercise3.oldValue,
        newValue: state.exercise3.newValue,
    };
};

const mapDispatchToProps = (dispatch) => {
    return {
        valueSelected: (event) => {
            dispatch(actions.valueSelected(event));
        },
    };
};

const IntelligentExerciseThree = connect(
    mapStateToProps,
    mapDispatchToProps,
)(ExerciseThree);

export default IntelligentExerciseThree;


=================================
/reducers/exercise3.js
=================================
import actionTypes from '../actions/actionTypes';

const initialState = {
    oldValue: '',
    newValue: '',
};

// Just making this to show how it works with external functions
// here we just assign vars but we could do more complex operations
const changeValues = (state, action) => {
    const oldValue = state.newValue;
    const newValue = action.payload.newValue;
    return Object.assign({}, state, {
        oldValue: oldValue,
        newValue: newValue,
    });
};

const exercise = (state = initialState, action) => {
    switch (action.type) {
    case actionTypes.VALUE_SELECTED:
        return changeValues(state, action);
    default:
        return state;
    }
};

export default exercise;

=================================
/reducers/exercise3.js
=================================
import { combineReducers } from 'redux';
import exercise0 from './exercise0';
import exercise1 from './exercise1';
import exercise2 from './exercise2';
import exercise3 from './exercise3';

// this is combining all the reducers we have in the app
// you can access each of them using state.exercise0, state.exercise1, etc...
const rootReducer = combineReducers({
    exercise0,
    exercise1,
    exercise2,
    exercise3,
});

export default rootReducer;
